#!/bin/bash


#!!!!!!!!!!!!!!!!!!!!!!!! INCOMPLETE WORK IN PROGRESS !!!!!!!!!!!!!!!!!!!!!!!!


#==============================================================================
#
#       FILE:           BackupJobs
#
#       USAGE:
#
#       DESCRIPTION:    Runs various local, cloud and system backups
#
#       DEPENDENCIES:   rsync
#       
#       AUTHOR:         Charl Potgieter
#
#==============================================================================

# !!!!!!!!!!!!!!!!!!!!!!!!! TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
#       TESTING
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


#==============================================================================
#                       Configuration Options
#==============================================================================

# For both standard and error logs
LogPath=/srv/samba/Documents_Charl/Computer_Technical/Logs

#Path details for mirror backup of system itself excluding data
# ***** THIS IS A MIRROR FILES IN DESTINATION NOT IN SOURCE WILL BE ***********
# ***** DELETED IN THE DESTINATION PATH ***************************************
OS_SourcePath=/
OS_DestinationPath="/srv/samba/Documents_Charl/010_EncryptForCloudBackup\
/ArchSystemBackups/ArchServer"
OS_TarDestinationPath="/srv/samba/Documents_Charl/010_EncryptForCloudBackup\
/ArchSystemBackups/ArchServerTarballs"

# SPACE sperated list of locations to be excluded from systems backup
# list Exclusions below are modified from Arch Wiki
# https://wiki.archlinux.org/index.php/Full_system_backup_with_rsync
OS_Exclusions="/dev /proc /sys /tmp /run /mnt /media /srv/samba /lost+found"

# Path details for data mirror
# There is no data copy as this is seperately taken care of by rsnapshot
# ***** THIS IS A MIRROR FILES IN DESTINATION NOT IN SOURCE WILL BE DELETED ***
MirrorSourcePath=/srv/samba/
MirrorDestinationPath=/mnt/backups/mirror_overnight




#====FUNCTION==================================================================
#       Name:           system_mirror
#       Description:    Create a system mirror (excluding data)
#       Paramaters:     None
#       Returns:        None
#==============================================================================

system_mirror() {
     
        Log="$LogPath/$date.ArchServerBackupLog.txt"
        ErrorLog="$LogPath/$date.ArchServerBackupErrorLog.txt"

        # Create an exclusion array.  Variable expanstion takes place after
        # brace expanion so can't use a brace expansion solution
        excl_array=()
        for  i in $OS_Exclusions; do
                excl_array+=(--exclude="$i" )
        done

        
        rsync -aAXv --delete  "${excl_array[@]}" \
                $OS_SourcePath $OS_DestinationPath >$Log 2>$ErrorLog
}






#====FUNCTION==================================================================
#       Name:           system_mirror_tarball
#       Description:    Mirror system as a tarball (excluding data)
#       Paramaters:     None
#       Returns:        None
#==============================================================================

system_mirror_tarball() {

        # Tarball is created in addition to standard backup due to possible
        #  difficulty with longer pathnames in some environments e.g. windows
        # and cloud backups.
        # refer here for exclusions (arch wiki rsync backups)
        # https://wiki.archlinux.org/index.php/Full_system_backup_with_rsync
        # /srv is also excluded as it contains the mounted files used for
        # samba share

        Log="$LogPath/$date.ArchServerTarBackupLog.txt"
        ErrorLog="$LogPath/$date.ArchServerTarBackupErrorLog.txt"
        OS_TarDestinationFile=$OS_TarDestinationPath/$date.ArchServerBackup.tar.gz

        # Create an exclusion array.  Variable expanstion takes place after
        # brace expanion so can't use a brace expansion solution
        excl_array=()
        for  i in $OS_Exclusions; do
                excl_array+=(--exclude="$i")
        done

        if [ $DayOfMonth -eq 1 ]
        then
               tar "${excl_array[@]}"  -czpvf $OS_TarDestinationFile \
                       $OS_SourcePath >$Log 2>$ErrorLog
        fi

}





#====FUNCTION==================================================================
#       Name:           mirror_data_local
#       Description:    Create a local mirror of data drive
#       Paramaters:     None
#       Returns:        None
#==============================================================================

mirror_data_local() {

# (There is no data copy as this is seperately taken care of by rsnapshot)

        Log="$LogPath/$date.DataMirrorBackupLog.txt"
        ErrorLog="$LogPath/$date.DataMirrorBackupErrorLog.txt"

        rsync -aAXv --delete  $MirrorSourcePath $MirrorDestinationPath\
                > $Log 2> $ErrorLog

}
        




#==============================================================================
#                               MAIN PROGRAM
#==============================================================================


date=$(date "+%m%d")
DayOfMonth=$(date +%d)

# Read script flags and execute individual processes if flags exist
# http://wiki.bash-hackers.org/howto/getopts_tutorial
FlagsFound=0
while getopts "stl" opt; do
        case $opt in
        s)
                system_mirror
                FlagsFound=1
                ;;
        t)
                # Force DayOfMonth to 1 so tarball runs irrespective of date
                DayOfMonth=1
                system_mirror_tarball
                FlagsFound=1
                ;;
        l)
                mirror_data_local
                FlagsFound=1
                ;;
        \?)
                echo "Invalid option: -$OPTARG" # >&2
                exit 1
                ;;
        esac
done


# Run all scripts if no flags specified
if [ $FlagsFound -eq 0 ]; then
        system_mirror
        system_mirror_tarball
        mirror_data_local
fi

